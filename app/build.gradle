apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.fzzz.mydemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        release {
            keyAlias properties.getProperty("fzzz_signature.alias")
            keyPassword properties.getProperty("fzzz_signature.alias_password")
            storePassword properties.getProperty("fzzz_signature.password")
            storeFile file('fzzz.jks')
        }
    }

    buildTypes {
        release {
            //不显示Log
            debuggable false
            //启用混淆
            minifyEnabled false
            //清理无用资源
            shrinkResources false
            //启用zipAlign压缩
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            //显示Log
            debuggable true
            //不启用混淆
            minifyEnabled false
            //清理无用资源
            shrinkResources false
            //启用zipAlign压缩
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

//在layout下建立文件夹
//    sourceSets {
//        main {
//            res.srcDirs = [
//                'src/main/res/layout/interview',
//                'src/main/res/layout',
//                'src/main/res',
//            ]
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(':framework')
    implementation project(':interview')
    implementation project(':fragment')
    //Butterknife
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    //阿里路由ARouter
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

    //https图片处理
    implementation "com.github.bumptech.glide:okhttp3-integration:4.5.0"

    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

//    implementation(name: 'liblogin', ext: 'aar')
}
